FAst scalable full satch app
React for front end. NOde for backend, express backend framework and MongoDB for database

Cloudinary is a popular server for uploading pictures and videos

NodeJS provides backend environment 
POSTMAN is used for testing our APIs
Git is used for terminal
We use MongoDB compass and ATLAS for online cluster or database

First we will handle backend part and then front end

install express dotenv mongoose 
dotenv for reading environment variable

create data seeder for sending all products data at once to db


if (req.params.id.length!=24) {
        return res.status(404).json({
            success: false,
            message: 'Product not found! Enter Product ID.'
        })
    }
 written this for handling error as it throws error to see in console with characters less than 24

IN redux we have one centralized complete store and any component gets data from here by calling

We have made email address unique


API features
1. pagination
2. Search 
3. Filter functionality

We use it so that our server do not get slow. These will be handled form frontend

We can also do searching in the .find(keyword) but we need to display all the products when a is searched and also make search case insensitive

http://localhost:4000/products?name=B-707 (BLUETOOTH HEADPHONE)

all the products in some price range


Frontend
In public create new folder images
Fragments let you group a list of children without adding extra nodes to the DOM. There is also a new short syntax for declaring them.

install a package named react-helmet allow us to put in the custom data in the page like title


React Helmet is a reusable React component that will manage all of your changes to the document head.

For example, if you want to change the title and meta description of every page according to your SEO, you could do the following:

<Helmet>
    <title>Your Title</title>
    <meta name="description" content="Description of your page" />
</Helmet>

Understandning Redux 
Suppose we have two components Home and Profile. If we fetched data in Home component and we want that data in profile as well so we can fetch again but this will cause repitition so we use Redux to avoid
So using child we can pass parent data

first of all we need to create producer, action and then we have to pull data from this date

Format of writing
first write reducers till case and default, then for cases write constants and then write cases. Now import in store and under combineReducers and then write actions. Now check that the product Details state is creates which gets its name from combineReducers in store